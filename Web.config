<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="ajaxNet">
      <!--
        If you are using Microsoft .NET 1.1 please remove the two attributes
        requirePermission and restartOnExternalChanges, they are only supported
        with .NET 2.0. <configuration>\<system.web>\<httpModules>
      -->
      <section name="ajaxSettings" type="AjaxPro.AjaxSettingsSectionHandler,AjaxPro.2" requirePermission="false" restartOnExternalChanges="true" />
    </sectionGroup>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="IntranetVB.My.MySettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <ajaxNet>
    <ajaxSettings>
      <urlNamespaceMappings useAssemblyQualifiedName="false" allowListOnly="false">
        <!--
          Set the attribute useAssemblyQualifiedName to true to enable
          use of assemblies placed in the GAC by using the full assembly
          qualified name.
        
          To hide internal knowledge of assemblies, classes and namespace
          you can override the name of the virtual http endpoints.
          
          <add type="Namespace.Class1,Assembly" path="mypath" />
        -->
      </urlNamespaceMappings>
      <jsonConverters includeTypeProperty="true">
        <!--
          This section can be used to add new IJavaScriptConverters to the
          Ajax.NET Professional engine. If you want to disable built-in
          converters you can use the remove tag.
      
          <remove type="Namespace.Class1,Assembly"/>
          <add type="Namespace.Class2,Assembly"/>
          
          <add type="AjaxPro.BitmapConverter,AjaxPro.2" mimeType="image/jpeg" quality="100"/>
        -->
      </jsonConverters>
      <!--
        Set the enabled attribute to true to get Stack, TargetSize and Source 
        information if an exception has been thrown.
      -->
      <debug enabled="false" />
      <!--
        This is the default configuration used with Ajax.NET Professional. You
        can put there your static JavaScript files, or remove the path attribute
        to completly disable the files.
      
        <scriptReplacements>
          <file name="prototype" path="~/ajaxpro/prototype.ashx" />
          <file name="core" path="~/ajaxpro/core.ashx" />
          <file name="converter" path="~/ajaxpro/converter.ashx" />
        </scriptReplacements>
      -->
      <!-- <encryption cryptType="" keyType="" /> -->
      <!--
        Set the enabled attribute to true to enable the use of an Ajax.NET Professional
        token. This will send a token to the client that will be used to identify if the
        requests comes from the same PC.
      -->
      <token enabled="false" sitePassword="password" />
      <!--
        The oldStyle (or now configuration) section can be used to enable old styled JavaScript code or
        functions that are not used any more. Some of them cannot be used together.
      
        <configuration>
          <renderNotASPAJAXDateTime/>
          <objectExtendPrototype/>
          <appCodeQualifiedFullName/>
          <allowNumberBooleanAsString/>
          <sessionStateDefaultNone/>
          <includeMsPrototype/>
          <renderDateTimeAsString/>
          <noUtcTime/>
          <renderJsonCompliant/>
          <useSimpleObjectNaming/>
        </configuration>
      -->
    </ajaxSettings>
  </ajaxNet>
  <appSettings>
    <add key="CrystalImageCleaner-AutoStart" value="true" />
    <add key="CrystalImageCleaner-Sleep" value="60000" />
    <add key="CrystalImageCleaner-Age" value="120000" />
    <add key="HorasDia" value="08:00" />
  </appSettings>
  <connectionStrings>
    <add name="dbIntranetProducao" connectionString="Data Source=172.22.0.14;Initial Catalog=dbIntranet;Persist Security Info=True;User ID=sa;Password=Banco!@#Add" providerName="System.Data.SqlClient" />
    <!--<add name="dbIntranetProducao" connectionString="Data Source=localhost;Initial Catalog=dbIntranet;Persist Security Info=True;User ID=intranet;Password=Banco!@#Add" providerName="System.Data.SqlClient" />-->
  </connectionStrings>
  <system.web>
    <globalization culture="pt-BR" uiCulture="pt-BR" requestEncoding="iso-8859-1" responseEncoding="iso-8859-1" fileEncoding="iso-8859-1" />
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.

            Visual Basic options:
            Set strict="true" to disallow all data type conversions 
            where data loss can occur. 
            Set explicit="true" to force declaration of all variables.
        -->
    <compilation debug="true" strict="false" explicit="true" targetFramework="4.0">
      <assemblies>
        <add assembly="Microsoft.ReportViewer.WebForms, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <add assembly="Microsoft.ReportViewer.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <!--<add assembly="log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=692FBEA5521E1304"/>-->
        <add assembly="AjaxControlToolkit, Version=4.1.60623.0, Culture=neutral, PublicKeyToken=28F01B0E84B6D53E" />
      </assemblies>
      <buildProviders>
        <add extension=".rdlc" type="Microsoft.Reporting.RdlBuildProvider, Microsoft.ReportViewer.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </buildProviders>
    </compilation>
    <pages controlRenderingCompatibilityVersion="4.0" clientIDMode="AutoID" maintainScrollPositionOnPostBack="true">
      <namespaces>
        <clear />
        <add namespace="System" />
        <add namespace="System.Collections" />
        <add namespace="System.Collections.Generic" />
        <add namespace="System.Collections.Specialized" />
        <add namespace="System.Configuration" />
        <add namespace="System.Text" />
        <add namespace="System.Text.RegularExpressions" />
        <add namespace="System.Linq" />
        <add namespace="System.Xml.Linq" />
        <add namespace="System.Web" />
        <add namespace="System.Web.Caching" />
        <add namespace="System.Web.SessionState" />
        <add namespace="System.Web.Security" />
        <add namespace="System.Web.Profile" />
        <add namespace="System.Web.UI" />
        <add namespace="System.Web.UI.WebControls" />
        <add namespace="System.Web.UI.WebControls.WebParts" />
        <add namespace="System.Web.UI.HtmlControls" />
      </namespaces>
    </pages>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Forms" />
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <customErrors mode="Off" />
    <httpHandlers>
      <add path="Reserved.ReportViewerWebControl.axd" verb="*" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" validate="false" />
    </httpHandlers>
    <httpModules>
      <!-- 
      This HttpCompressionModule is only working for requests in "ajaxpro" folder. The module
      is available for ASP.NET 2.0.
      <add name="HttpCompressionModule" type="AjaxPro.HttpCompressionModule,AjaxPro.2"/>
      -->
    </httpModules>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <add name="ReportViewerWebControlHandler" preCondition="integratedMode" verb="*" path="Reserved.ReportViewerWebControl.axd" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </handlers>
  </system.webServer>
  <system.net>
    <mailSettings>
      <smtp>
        <network host="smtp.addvisorconsulting.com.br" port="587" userName="tiago.rodrigues@addvisorconsulting.com.br" password="Tig@3456" />
      </smtp>
    </mailSettings>
  </system.net>
  <applicationSettings>
    <IntranetVB.My.MySettings>
      <setting name="strConnAddvisor" serializeAs="String">
        <value>Data Source=172.22.0.14;Initial Catalog=dbIntranet;User Id=intranet;Password=Banco!@#Add;</value>
      </setting>
    </IntranetVB.My.MySettings>
  </applicationSettings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="AjaxControlToolkit" publicKeyToken="28f01b0e84b6d53e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.60623.0" newVersion="4.1.60623.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>